{"ast":null,"code":"const switchRequest = () => {\n  return window.ethereum.request({\n    method: \"wallet_switchEthereumChain\",\n    params: [{\n      chainId: \"0xa86a\"\n    }]\n  });\n};\n\nconst addChainRequest = () => {\n  return window.ethereum.request({\n    method: \"wallet_addEthereumChain\",\n    params: [{\n      chainId: \"0x38\",\n      chainName: \"Binance Smart Chain Mainnet\",\n      rpcUrls: [\"https://bsc-dataseed.binance.org/\"],\n      blockExplorerUrls: [\"https://bscscan.com/\"],\n      nativeCurrency: {\n        name: \"BNB\",\n        symbol: \"BNB\",\n        decimals: 8\n      }\n    }]\n  });\n};\n\nexport const swithNetwork = async () => {\n  if (window.ethereum) {\n    try {\n      await switchRequest();\n    } catch (error) {\n      if (error.code === 4902) {\n        try {\n          await addChainRequest();\n          await switchRequest();\n        } catch (addError) {\n          console.log(error);\n        }\n      }\n\n      console.log(error);\n    }\n  }\n};","map":{"version":3,"sources":["/Users/Ashley/Documents/GitHub/eamdao-final/src/helpers/switch-network.ts"],"names":["switchRequest","window","ethereum","request","method","params","chainId","addChainRequest","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","name","symbol","decimals","swithNetwork","error","code","addError","console","log"],"mappings":"AAEA,MAAMA,aAAa,GAAG,MAAM;AACxB,SAAOC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAC3BC,IAAAA,MAAM,EAAE,4BADmB;AAE3BC,IAAAA,MAAM,EAAE,CAAC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAD;AAFmB,GAAxB,CAAP;AAIH,CALD;;AAOA,MAAMC,eAAe,GAAG,MAAM;AAC1B,SAAON,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAC3BC,IAAAA,MAAM,EAAE,yBADmB;AAE3BC,IAAAA,MAAM,EAAE,CACJ;AACIC,MAAAA,OAAO,EAAE,MADb;AAEIE,MAAAA,SAAS,EAAE,6BAFf;AAGIC,MAAAA,OAAO,EAAE,CAAC,mCAAD,CAHb;AAIIC,MAAAA,iBAAiB,EAAE,CAAC,sBAAD,CAJvB;AAKIC,MAAAA,cAAc,EAAE;AACZC,QAAAA,IAAI,EAAE,KADM;AAEZC,QAAAA,MAAM,EAAE,KAFI;AAGZC,QAAAA,QAAQ,EAAE;AAHE;AALpB,KADI;AAFmB,GAAxB,CAAP;AAgBH,CAjBD;;AAmBA,OAAO,MAAMC,YAAY,GAAG,YAAY;AACpC,MAAId,MAAM,CAACC,QAAX,EAAqB;AACjB,QAAI;AACA,YAAMF,aAAa,EAAnB;AACH,KAFD,CAEE,OAAOgB,KAAP,EAAmB;AACjB,UAAIA,KAAK,CAACC,IAAN,KAAe,IAAnB,EAAyB;AACrB,YAAI;AACA,gBAAMV,eAAe,EAArB;AACA,gBAAMP,aAAa,EAAnB;AACH,SAHD,CAGE,OAAOkB,QAAP,EAAiB;AACfC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACH;AACJ;;AACDG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACH;AACJ;AACJ,CAhBM","sourcesContent":["import { Networks } from \"../constants/blockchain\";\n\nconst switchRequest = () => {\n    return window.ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: \"0xa86a\" }],\n    });\n};\n\nconst addChainRequest = () => {\n    return window.ethereum.request({\n        method: \"wallet_addEthereumChain\",\n        params: [\n            {\n                chainId: \"0x38\",\n                chainName: \"Binance Smart Chain Mainnet\",\n                rpcUrls: [\"https://bsc-dataseed.binance.org/\"],\n                blockExplorerUrls: [\"https://bscscan.com/\"],\n                nativeCurrency: {\n                    name: \"BNB\",\n                    symbol: \"BNB\",\n                    decimals: 8,\n                },\n            },\n        ],\n    });\n};\n\nexport const swithNetwork = async () => {\n    if (window.ethereum) {\n        try {\n            await switchRequest();\n        } catch (error: any) {\n            if (error.code === 4902) {\n                try {\n                    await addChainRequest();\n                    await switchRequest();\n                } catch (addError) {\n                    console.log(error);\n                }\n            }\n            console.log(error);\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"module"}