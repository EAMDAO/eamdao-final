{"ast":null,"code":"import { Networks } from \"./blockchain\";\nconst AVAX_MAINNET = {\n  DAO_ADDRESS: \"0x78a9e536EBdA08b5b9EDbE5785C9D1D50fA3278C\",\n  MEMO_ADDRESS: \"0x136Acd46C134E8269052c62A67042D6bDeDde3C9\",\n  TIME_ADDRESS: \"0x8375368eb65A19A9f2db53006505b3b459aa48FF\",\n  //replace with EAM (time was 0xb54f16fB19478766A268F172C9480f8da1a7c9C3)\n  MIM_ADDRESS: \"0x55d398326f99059ff775485246999027b3197955\",\n  //replace with USDT (MIM was 0x130966628846BFd36ff31a822705796e8cb8C18D)\n  STAKING_ADDRESS: \"0x4456B87Af11e87E329AB7d7C7A246ed1aC2168B9\",\n  STAKING_HELPER_ADDRESS: \"0x096BBfB78311227b805c968b070a81D358c13379\",\n  TIME_BONDING_CALC_ADDRESS: \"0x819323613AbC79016f9D2443a65E9811545382a5\",\n  TREASURY_ADDRESS: \"0x1c46450211CB2646cc1DA3c5242422967eD9e04c\",\n  ZAPIN_ADDRESS: \"0x9ABE63C5A2fBcd54c8bAec3553d326356a530cae\",\n  //\"0xb98007C04f475022bE681a890512518052CE6104\",\n  WMEMO_ADDRESS: \"0x0da67235dD5787D67955420C84ca1cEcd4E5Bb3b\"\n};\nexport const getAddresses = networkID => {\n  if (networkID === Networks.AVAX) return AVAX_MAINNET;\n  throw Error(\"Network don't support\");\n};","map":{"version":3,"sources":["/Users/Ashley/Documents/GitHub/eamdao-final/src/constants/addresses.ts"],"names":["Networks","AVAX_MAINNET","DAO_ADDRESS","MEMO_ADDRESS","TIME_ADDRESS","MIM_ADDRESS","STAKING_ADDRESS","STAKING_HELPER_ADDRESS","TIME_BONDING_CALC_ADDRESS","TREASURY_ADDRESS","ZAPIN_ADDRESS","WMEMO_ADDRESS","getAddresses","networkID","AVAX","Error"],"mappings":"AAAA,SAASA,QAAT,QAAyB,cAAzB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,4CADI;AAEjBC,EAAAA,YAAY,EAAE,4CAFG;AAGjBC,EAAAA,YAAY,EAAE,4CAHG;AAG2C;AAC5DC,EAAAA,WAAW,EAAE,4CAJI;AAI0C;AAC3DC,EAAAA,eAAe,EAAE,4CALA;AAMjBC,EAAAA,sBAAsB,EAAE,4CANP;AAOjBC,EAAAA,yBAAyB,EAAE,4CAPV;AAQjBC,EAAAA,gBAAgB,EAAE,4CARD;AASjBC,EAAAA,aAAa,EAAE,4CATE;AAS4C;AAC7DC,EAAAA,aAAa,EAAE;AAVE,CAArB;AAaA,OAAO,MAAMC,YAAY,GAAIC,SAAD,IAAuB;AAC/C,MAAIA,SAAS,KAAKb,QAAQ,CAACc,IAA3B,EAAiC,OAAOb,YAAP;AAEjC,QAAMc,KAAK,CAAC,uBAAD,CAAX;AACH,CAJM","sourcesContent":["import { Networks } from \"./blockchain\";\n\nconst AVAX_MAINNET = {\n    DAO_ADDRESS: \"0x78a9e536EBdA08b5b9EDbE5785C9D1D50fA3278C\",\n    MEMO_ADDRESS: \"0x136Acd46C134E8269052c62A67042D6bDeDde3C9\",\n    TIME_ADDRESS: \"0x8375368eb65A19A9f2db53006505b3b459aa48FF\", //replace with EAM (time was 0xb54f16fB19478766A268F172C9480f8da1a7c9C3)\n    MIM_ADDRESS: \"0x55d398326f99059ff775485246999027b3197955\", //replace with USDT (MIM was 0x130966628846BFd36ff31a822705796e8cb8C18D)\n    STAKING_ADDRESS: \"0x4456B87Af11e87E329AB7d7C7A246ed1aC2168B9\",\n    STAKING_HELPER_ADDRESS: \"0x096BBfB78311227b805c968b070a81D358c13379\",\n    TIME_BONDING_CALC_ADDRESS: \"0x819323613AbC79016f9D2443a65E9811545382a5\",\n    TREASURY_ADDRESS: \"0x1c46450211CB2646cc1DA3c5242422967eD9e04c\",\n    ZAPIN_ADDRESS: \"0x9ABE63C5A2fBcd54c8bAec3553d326356a530cae\", //\"0xb98007C04f475022bE681a890512518052CE6104\",\n    WMEMO_ADDRESS: \"0x0da67235dD5787D67955420C84ca1cEcd4E5Bb3b\",\n};\n\nexport const getAddresses = (networkID: number) => {\n    if (networkID === Networks.AVAX) return AVAX_MAINNET;\n\n    throw Error(\"Network don't support\");\n};\n"]},"metadata":{},"sourceType":"module"}